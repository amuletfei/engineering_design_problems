import numpy as np


def speed_cons(x):
    """
    :return: All cons should be minus than 0
    """
    con1 = 27 / (x[0] * x[1] ** 2 * x[2]) - 1
    con2 = 397.5 / (x[0] * x[1] ** 2 * x[2] ** 2) - 1
    con3 = 1.93 * x[3] ** 3 / (x[1] * x[2] * x[5] ** 4) - 1
    con4 = 1.93 * x[4] ** 3 / (x[1] * x[2] * x[6] ** 4) - 1
    con5 = np.sqrt((745 * x[3] / (x[1] * x[2])) ** 2 + 16.9 * 10 ** 6) / (110 * x[5] ** 3) - 1
    con6 = np.sqrt((745 * x[4] / (x[1] * x[2])) ** 2 - 157.5 * 10 ** 6) / (85 * x[6] ** 3) - 1
    con7 = x[1] * x[2] / 40 - 1
    con8 = 5 * x[1] / x[0] - 1
    con9 = x[0] / (12 * x[1]) - 1
    con10 = (1.5 * x[5] + 1.9) / x[3] - 1
    con11 = (1.1 * x[6] + 1.9) / x[4] - 1

    return [con1, con2, con3, con4, con5, con6, con7, con8, con9, con10, con11]


def speed_obj(x):
    """
    :param x:
    2.6 <= x[0] <=3.6
    0.7 <= x[1] <=0.8
    17 <= x[2] <=28
    7.3 <= x[3] <= 8.3
    7.8 <= x[4] <=8.3
    2.9 <= x[5] <= 3.9
    5.0 <= x[6] <= 5.5
    :return:
    """
    return 0.7584*x[0]*x[1]**2*(3.3333*x[2]**2 + 14.9334*x[2]-43.0934) - 1.508*x[0]*(x[5]**2+x[6]**2) + 7.4777*(x[5]**3 + x[6]**3) + 0.7854*(x[3]*x[5]**2 + x[4]*x[6]**2)